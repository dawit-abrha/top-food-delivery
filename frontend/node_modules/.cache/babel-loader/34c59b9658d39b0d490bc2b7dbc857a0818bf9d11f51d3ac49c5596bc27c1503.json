{"ast":null,"code":"var _jsxFileName = \"/Users/dawitabrhaweldegebriel/Desktop/food delivery/frontend/src/context/StoreContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext(null);\nexport const StoreContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const url = \"http://localhost:4000\";\n  const [token, setToken] = useState(\"\");\n  const [food_list, setFoodList] = useState([]);\n  const addToCart = async itemId => {\n    if (!cartItems[itemId]) {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: 1\n      }));\n    } else {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] + 1\n      }));\n    }\n    if (token) {\n      await axios.post(url + \"/api/cart/add\", {\n        itemId\n      }, {\n        headers: {\n          token\n        }\n      });\n    }\n  };\n  const removeFromCart = async itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (token) {\n      await axios.post(url + \"/api/cart/remove\", {\n        itemId\n      }, {\n        headers: {\n          token\n        }\n      });\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n\n    // Check if food_list is empty or cartItems is not populated yet\n    if (food_list.length === 0 || Object.keys(cartItems).length === 0) {\n      return 0;\n    }\n    for (const itemId in cartItems) {\n      if (cartItems[itemId] > 0) {\n        let itemInfo = food_list.find(product => product._id === itemId);\n\n        // If itemInfo is undefined or doesn't have a price, skip\n        if (itemInfo && itemInfo.price) {\n          totalAmount += itemInfo.price * cartItems[itemId];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const fetchFoodList = async () => {\n    const response = await axios.get(url + \"/api/food/list\");\n    setFoodList(response.data.data);\n  };\n  const loadCartData = async token => {\n    const response = await axios.post(url + \"/api/cart/get\", {}, {\n      headers: {\n        token\n      }\n    });\n    setCartItems(response.data.cartData);\n  };\n  useEffect(() => {\n    async function loadData() {\n      await fetchFoodList();\n      if (localStorage.getItem('token')) {\n        setToken(localStorage.getItem('token'));\n        await loadCartData(localStorage.getItem('token'));\n      }\n    }\n    loadData();\n  }, []);\n  const contextValue = {\n    food_list,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount,\n    setCartItems,\n    url,\n    token,\n    setToken\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreContextProvider, \"Zt4nkvW6oMVjv6sAj+ore49U6z8=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","StoreContext","StoreContextProvider","props","_s","cartItems","setCartItems","url","token","setToken","food_list","setFoodList","addToCart","itemId","prev","post","headers","removeFromCart","getTotalCartAmount","totalAmount","length","Object","keys","itemInfo","find","product","_id","price","fetchFoodList","response","get","data","loadCartData","cartData","loadData","localStorage","getItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dawitabrhaweldegebriel/Desktop/food delivery/frontend/src/context/StoreContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\"\nimport axios from \"axios\"\nexport const StoreContext = createContext(null);\n\n\n\nexport const StoreContextProvider = (props) => {\n\n\n    const [cartItems, setCartItems] = useState({});\n    const url = \"http://localhost:4000\"\n    const [token, setToken] = useState(\"\");\n    const [food_list, setFoodList] = useState([])\n\n\n\n\n\n\n\n    const addToCart = async (itemId) => {\n        if (!cartItems[itemId]) {\n            setCartItems((prev) => ({ ...prev, [itemId]: 1 }))\n        }\n        else {\n            setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }))\n        }\n        if(token){\n            await axios.post(url+\"/api/cart/add\",{itemId},{headers:{token}})\n        }\n    }\n    \n    const removeFromCart = async (itemId) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }))\n        if(token){\n            await axios.post(url+\"/api/cart/remove\",{itemId},{headers:{token}})\n        }\n\n    }\n    const getTotalCartAmount = () => {\n        let totalAmount = 0;\n    \n        // Check if food_list is empty or cartItems is not populated yet\n        if (food_list.length === 0 || Object.keys(cartItems).length === 0) {\n            return 0;\n        }\n    \n        for (const itemId in cartItems) {\n            if (cartItems[itemId] > 0) {\n                let itemInfo = food_list.find((product) => product._id === itemId);\n                \n                // If itemInfo is undefined or doesn't have a price, skip\n                if (itemInfo && itemInfo.price) {\n                    totalAmount += itemInfo.price * cartItems[itemId];\n                }\n            }\n        }\n    \n        return totalAmount;\n    };\n    \n    const fetchFoodList = async () => {\n        const response = await axios.get(url+\"/api/food/list\");\n        setFoodList(response.data.data)\n    }\n\n    const loadCartData = async (token) => {\n        const response = await axios.post(url+\"/api/cart/get\",{},{headers:{token}})\n        setCartItems(response.data.cartData);\n    }\n\n    useEffect(() => {\n        async function loadData() {\n            await fetchFoodList();\n            if (localStorage.getItem('token')) {\n                setToken(localStorage.getItem('token'));\n                await loadCartData(localStorage.getItem('token'));\n            }\n        }\n        loadData();\n        \n    }, []);\n\n\n    const contextValue = {\n        food_list,\n        cartItems,\n        addToCart,\n        removeFromCart,\n        getTotalCartAmount,\n        setCartItems,\n        url,\n        token,\n        setToken,\n\n    }\n    return (\n        <StoreContext.Provider value={contextValue}>\n            {props.children}\n        </StoreContext.Provider>\n    )\n}\n\nexport default StoreContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}