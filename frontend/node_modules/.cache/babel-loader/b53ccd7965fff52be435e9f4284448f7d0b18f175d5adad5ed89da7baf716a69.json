{"ast":null,"code":"var _jsxFileName = \"/Users/dawitabrhaweldegebriel/Desktop/food delivery/frontend/src/pages/myOrders/MyOrder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport './myOrders.css';\nimport { StoreContext } from '../../context/StoreContext'; // Ensure you're importing from the correct path\nimport axios from 'axios';\nimport { assets } from '../../assets/assets'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const {\n    url,\n    token\n  } = useContext(StoreContext);\n  const [data, setData] = useState([]);\n  const fetchOrders = async () => {\n    try {\n      // Send POST request to fetch orders\n      const response = await axios.post(url + \"/api/order/userorders\", {}, {\n        headers: {\n          token\n        }\n      });\n\n      // Check if the request was successful\n      if (response.data.success) {\n        // Set the orders data\n        setData(response.data.data);\n      } else {\n        // Handle case where the server returned an error in the response\n        console.error(\"Failed to fetch orders:\", response.data.message || \"Unknown error\");\n      }\n    } catch (error) {\n      // Catch any error that occurs during the request\n      console.error(\"Error fetching orders:\", error.response ? error.response.data : error.message);\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      fetchOrders();\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-orders\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) // Display message if no orders are returned\n      : data.map((order, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-orders-order\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: order.image || assets.parcel_icon,\n            alt: `Order ${order.id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Order ID: \", order.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", order.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", new Date(order.date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MyOrders, \"BZsxNGEAmzM05oVgJMeLCHSPzoE=\");\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","useContext","useState","useEffect","StoreContext","axios","assets","jsxDEV","_jsxDEV","MyOrders","_s","url","token","data","setData","fetchOrders","response","post","headers","success","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","order","index","src","image","parcel_icon","alt","id","status","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/dawitabrhaweldegebriel/Desktop/food delivery/frontend/src/pages/myOrders/MyOrder.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport './myOrders.css';\nimport { StoreContext } from '../../context/StoreContext'; // Ensure you're importing from the correct path\nimport axios from 'axios';\nimport { assets } from '../../assets/assets'; // Ensure this path is correct\n\nconst MyOrders = () => {\n  const { url, token } = useContext(StoreContext);\n  const [data, setData] = useState([]);\n\n  const fetchOrders = async () => {\n    try {\n      // Send POST request to fetch orders\n      const response = await axios.post(url + \"/api/order/userorders\", {}, {\n        headers: { token }\n      });\n\n      // Check if the request was successful\n      if (response.data.success) {\n        // Set the orders data\n        setData(response.data.data);\n      } else {\n        // Handle case where the server returned an error in the response\n        console.error(\"Failed to fetch orders:\", response.data.message || \"Unknown error\");\n      }\n    } catch (error) {\n      // Catch any error that occurs during the request\n      console.error(\"Error fetching orders:\", error.response ? error.response.data : error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (token) {\n      fetchOrders();\n    }\n  }, [token]);\n\n  return (\n    <div className=\"my-orders\">\n      <h2>My Orders</h2>\n      <div className=\"container\">\n        {data.length === 0 ? (\n          <p>No orders found.</p> // Display message if no orders are returned\n        ) : (\n          data.map((order, index) => {\n            return (\n              <div key={index} className=\"my-orders-order\">\n                {/* Assuming 'order.image' exists and contains a URL */}\n                <img src={order.image || assets.parcel_icon} alt={`Order ${order.id}`} />\n                \n                {/* Display order details (e.g., id, status, etc.) */}\n                <div className=\"order-details\">\n                  <p>Order ID: {order.id}</p>\n                  <p>Status: {order.status}</p>\n                  <p>Date: {new Date(order.date).toLocaleDateString()}</p> {/* Format the date */}\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MyOrders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}